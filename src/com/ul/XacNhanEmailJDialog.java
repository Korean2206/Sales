/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.ul;

import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import com.DAO.NhanVienDAO;
import com.entity.NhanVien;
import com.utils.XMessage;
import com.utils.XImage;


/**
 *
 * @author korea
 */
public class XacNhanEmailJDialog extends javax.swing.JDialog {

    /**
     * Creates new form XacNhanEmailJDialog
     */
    public XacNhanEmailJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtXacNhanEmail = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        lblDes = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnNext.setText("Tiếp theo");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmail.setText("jLabel1");

        lblDes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDes.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnNext)
                        .addComponent(txtXacNhanEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblDes))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblEmail)
                .addGap(3, 3, 3)
                .addComponent(lblDes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtXacNhanEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnNext)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        sendEmail();
        showXacNhanMa();
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmailJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                XacNhanEmailJDialog dialog = new XacNhanEmailJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel lblDes;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JTextField txtXacNhanEmail;
    // End of variables declaration//GEN-END:variables

    private final String username = "secondhandshopad";
    private final String password = "plkusrxxlzgmlrko";
    private void init() {
        XImage.setIconApp(this);
        this.setLocationRelativeTo(null);
        this.setTitle("Quên mật khẩu");
        showEmail();
    }
    private void showXacNhanMa() {
        if(checkEmail()) {
            this.dispose();
            new XacNhanMaJDialog(null, true).setVisible(true);

        }
        else {
            XMessage.alert(this, "Bạn cần xác nhận email");
        }
    }
    private Boolean checkEmail() {
        if(txtXacNhanEmail.getText().equals("")){
            return false;
        }
        return true;
    }
    private NhanVienDAO daoNV = new NhanVienDAO();
    private String getEmail(){
        try {
            NhanVien nv = daoNV.selectByID(LoginJDialog.txtAcc.getText().trim());
            if(nv == null){
                return "email null";
            }
            return nv.getEmail();
        } catch (Exception e) {
            // TODO: handle exception
            e.printStackTrace();
            return null;
        }
        
    }
    private int getIndexString(StringBuilder str){
        for(int i=0; i<str.length();i++){
            if(str.charAt(i) == '@')
            return i;
        }
        return -1;
    }
    private void showEmail() {
        StringBuilder str = new StringBuilder(getEmail());
        int index = getIndexString(str);
        for(int i=3; i< index; i++) {
            str.setCharAt(i,'*');
        }
        lblEmail.setText("Nhập lại email " + str);
        lblDes.setText("bạn đã cung cấp cho chúng tôi");
    }
    private boolean conFirmEmail() {
        String email = txtXacNhanEmail.getText().trim();
        if(email.equals(getEmail()))return true;
        return false;
    }
    private static int randomCode() {
        int n = (int)(Math.random()*(999999-111111 + 1) + 111111);
        return n;
    }
    final static int numberCode = randomCode();

    private void sendEmail() {
        String from = username;
        String pass = password;
        String to = getEmail().trim();
        String subject = "Mã khôi phục mật khẩu SecondHand Shop";
        String body = "Mã xác nhận của bạn là : " +numberCode;
        if(conFirmEmail())
        sendFromGmail(from, pass, to, subject, body);
        else
        XMessage.alert(this, "Email không trùng khớp");
    }

    private void sendFromGmail(String from,String pass,String to,String subject,String body) {
        Properties properties = System.getProperties();
        String host = "smtp.gmail.com";
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.host", host);
        properties.put("mail.smtp.user", from);
        properties.put("mail.smtp.password", pass);
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.auth", "true");

        Session session = Session.getDefaultInstance(properties);
        try{
            MimeMessage message = new MimeMessage(session);

            // set email from
            message.setFrom(new InternetAddress(from));

            //set email to
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

            // set subject
            message.setSubject(subject);

            // set message
            message.setText(body);

            //send message
            Transport transport = session.getTransport("smtp");
            transport.connect(host,from,pass);
            transport.sendMessage(message,message.getAllRecipients());
            transport.close();
        }
        catch (AddressException ae) {
            ae.printStackTrace();
            XMessage.alert(this, "Gửi mã xác nhận thất bại");
        }
        catch (MessagingException me) {
            me.printStackTrace();
            XMessage.alert(this, "Gửi mã xác nhận thất bại");

        }
    }
}
